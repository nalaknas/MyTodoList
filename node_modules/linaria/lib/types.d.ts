import type { RawSourceMap } from 'source-map';
import type { PluginOptions } from './babel/utils/loadOptions';
export declare type Replacement = {
    original: {
        start: Location;
        end: Location;
    };
    length: number;
};
export declare type Location = {
    line: number;
    column: number;
};
export declare type Rules = {
    [className: string]: {
        cssText: string;
        displayName: string;
        start: Location | null;
    };
};
export declare type Result = {
    code: string;
    sourceMap?: RawSourceMap | null;
    cssText?: string;
    cssSourceMapText?: string;
    dependencies?: string[];
    rules?: Rules;
    replacements?: Replacement[];
};
export declare type LinariaMetadata = {
    rules: Rules;
    replacements: Replacement[];
    dependencies: string[];
};
export declare type Options = {
    filename: string;
    preprocessor?: Preprocessor;
    outputFilename?: string;
    inputSourceMap?: RawSourceMap;
    pluginOptions?: Partial<PluginOptions>;
};
export declare type StyledMeta = {
    __linaria: {
        className: string;
        extends: StyledMeta;
    };
};
export declare type PreprocessorFn = (selector: string, cssText: string) => string;
export declare type Preprocessor = 'none' | 'stylis' | PreprocessorFn | void;
