{"version":3,"sources":["../../src/__utils__/linaria-snapshot-serializer.ts"],"names":["withLinariaMetadata","value","linaria","test","print","Object","keys","rules","map","selector","cssText","join","dependencies","length"],"mappings":";;;;;AAOA,MAAMA,mBAAmB,GACvBC,KAD0B,IAG1BA,KAAK,IAAI,OAAOA,KAAK,CAACC,OAAb,KAAyB,QAHpC;;eAKe;AACbC,EAAAA,IAAI,EAAEH,mBADO;AAEbI,EAAAA,KAAK,EAAE,CAAC;AAAEF,IAAAA;AAAF,GAAD,KAAkB;;;EAGzBG,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACK,KAApB,EACCC,GADD,CACMC,QAAD,IAAe,GAAEA,QAAS,KAAIP,OAAO,CAACK,KAAR,CAAcE,QAAd,EAAwBC,OAAQ,GADnE,EAECC,IAFD,CAEM,IAFN,CAEY;;gBAGVT,OAAO,CAACU,YAAR,CAAqBC,MAArB,GAA8BX,OAAO,CAACU,YAAR,CAAqBD,IAArB,CAA0B,IAA1B,CAA9B,GAAgE,IACjE;;AAXY,C","sourcesContent":["import type { LinariaMetadata } from '../types';\n\ntype Serializer<T> = {\n  test: (value: any) => value is T;\n  print: (value: T) => string;\n};\n\nconst withLinariaMetadata = (\n  value: any\n): value is { linaria: LinariaMetadata } =>\n  value && typeof value.linaria === 'object';\n\nexport default {\n  test: withLinariaMetadata,\n  print: ({ linaria }) => `\nCSS:\n\n${Object.keys(linaria.rules)\n  .map((selector) => `${selector} {${linaria.rules[selector].cssText}}`)\n  .join('\\n')}\n\nDependencies: ${\n    linaria.dependencies.length ? linaria.dependencies.join(', ') : 'NA'\n  }\n`,\n} as Serializer<{ linaria: LinariaMetadata }>;\n"],"file":"linaria-snapshot-serializer.js"}