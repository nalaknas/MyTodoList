{"version":3,"sources":["../../src/babel/index.ts"],"names":["isEnabled","caller","name","evaluate","linaria","babel","options","JSON","stringify","plugins","require"],"mappings":";;;;;AAQA;;AACA;;;;AATA;;;;;AAWA,SAASA,SAAT,CAAmBC,MAAnB,EAAmE;AACjE,SAAO,CAAAA,MAAM,QAAN,YAAAA,MAAM,CAAEC,IAAR,MAAiB,SAAjB,IAA8B,CAACD,MAAM,CAACE,QAA7C;AACD;;AAEc,SAASC,OAAT,CAAiBC,KAAjB,EAAmCC,OAAnC,EAA2D;AACxE,MAAI,CAACD,KAAK,CAACJ,MAAN,CAAaD,SAAb,CAAL,EAA8B;AAC5B,WAAO,EAAP;AACD;;AACD,qBAAM,SAAN,EAAiBO,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAjB;AACA,SAAO;AACLG,IAAAA,OAAO,EAAE,CAAC,CAACC,OAAO,CAAC,WAAD,CAAR,EAAuB,0BAAYJ,OAAZ,CAAvB,CAAD;AADJ,GAAP;AAGD","sourcesContent":["/**\n * File defines babel prest for Linaria.\n * It uses ./extract function that is an entry point for styles extraction.\n * It also bypass babel options defined in Linaria config file with it's defaults (see ./utils/loadOptions).\n */\nimport type { ConfigAPI, TransformCaller } from '@babel/core';\n\nimport type { PluginOptions } from './utils/loadOptions';\nimport loadOptions from './utils/loadOptions';\nimport { debug } from './utils/logger';\n\nfunction isEnabled(caller?: TransformCaller & { evaluate?: true }) {\n  return caller?.name !== 'linaria' || !caller.evaluate;\n}\n\nexport default function linaria(babel: ConfigAPI, options: PluginOptions) {\n  if (!babel.caller(isEnabled)) {\n    return {};\n  }\n  debug('options', JSON.stringify(options));\n  return {\n    plugins: [[require('./extract'), loadOptions(options)]],\n  };\n}\n"],"file":"index.js"}